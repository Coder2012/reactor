// Mixins - General
// -------------------------

// Units
// -------------------------

@function rem($values) {
	$baseline-rem: $base-font-size / 1rem;

	@if $values == 0 or $values == auto {
		@return $values;
	}

	@if type-of($values) == "number" {

		@if unit($values) == px {
			@return $values / $baseline-rem;
		}
		@else {
			@return $values;
		}
	}
	@else {
		$rems: ();

		@each $value in $values {
			$rems: append($rems, rem($value));
		}

		@return $rems;
	}
}


// Images
// -------------------------

%flex-image {
  max-width: 100%;
  width: 100%;
}


// Gradients
// -------------------------

@mixin background-gradient($baseColour, $toColour){
  background-color:   $baseColour;
  background-image:   -moz-linear-gradient(top, $baseColour, $toColour);
  background-image:   -webkit-gradient(linear, left top,left bottom, color-stop(0, $baseColour), color-stop(1, $toColour));
  background-image:   linear-gradient(top, $baseColour, $toColour);
}

@mixin swatch-gradient($color-1, $color-2) {
  background-color:   $color-1;
  background-image:   -moz-linear-gradient(-45deg, $color-1 50%, $color-2 50%);
  background-image:   -webkit-gradient(linear, left top, right bottom, color-stop(50%, $color-1), color-stop(50%, $color-2));
  background-image:   linear-gradient(135deg, $color-1 50%, $color-2 50%); 
}

// Utilities
// -------------------------

@mixin clearfix {
  *zoom: 1;
  &:before,
  &:after {
    display: table;
    content: "";
    line-height: 0;
  }
  &:after {
    clear: both;
  }
}

@mixin opacity($opacity) {
  $pct-opacity: ($opacity * 100);

  -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + $pct-opacity + ")";
  filter: alpha(opacity=$pct-opacity);

  opacity: $opacity;
}

%hidden {
  position: absolute;
  left: -9999px;
}

